# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from onehub.v1 import topics_pb2 as onehub_dot_v1_dot_topics__pb2


class TopicServiceStub(object):
    """*
    Service for operating on topics
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTopic = channel.unary_unary(
                '/onehub.v1.TopicService/CreateTopic',
                request_serializer=onehub_dot_v1_dot_topics__pb2.CreateTopicRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_topics__pb2.CreateTopicResponse.FromString,
                )
        self.ListTopics = channel.unary_unary(
                '/onehub.v1.TopicService/ListTopics',
                request_serializer=onehub_dot_v1_dot_topics__pb2.ListTopicsRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_topics__pb2.ListTopicsResponse.FromString,
                )
        self.GetTopic = channel.unary_unary(
                '/onehub.v1.TopicService/GetTopic',
                request_serializer=onehub_dot_v1_dot_topics__pb2.GetTopicRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_topics__pb2.GetTopicResponse.FromString,
                )
        self.GetTopics = channel.unary_unary(
                '/onehub.v1.TopicService/GetTopics',
                request_serializer=onehub_dot_v1_dot_topics__pb2.GetTopicsRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_topics__pb2.GetTopicsResponse.FromString,
                )
        self.DeleteTopic = channel.unary_unary(
                '/onehub.v1.TopicService/DeleteTopic',
                request_serializer=onehub_dot_v1_dot_topics__pb2.DeleteTopicRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_topics__pb2.DeleteTopicResponse.FromString,
                )
        self.UpdateTopic = channel.unary_unary(
                '/onehub.v1.TopicService/UpdateTopic',
                request_serializer=onehub_dot_v1_dot_topics__pb2.UpdateTopicRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_topics__pb2.UpdateTopicResponse.FromString,
                )


class TopicServiceServicer(object):
    """*
    Service for operating on topics
    """

    def CreateTopic(self, request, context):
        """*
        Create a new sesssion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTopics(self, request, context):
        """*
        List all topics from a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopic(self, request, context):
        """*
        Get a particular topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopics(self, request, context):
        """*
        Batch get multiple topics by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTopic(self, request, context):
        """*
        Delete a particular topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTopic(self, request, context):
        """*
        Updates specific fields of a topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TopicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTopic,
                    request_deserializer=onehub_dot_v1_dot_topics__pb2.CreateTopicRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_topics__pb2.CreateTopicResponse.SerializeToString,
            ),
            'ListTopics': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTopics,
                    request_deserializer=onehub_dot_v1_dot_topics__pb2.ListTopicsRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_topics__pb2.ListTopicsResponse.SerializeToString,
            ),
            'GetTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopic,
                    request_deserializer=onehub_dot_v1_dot_topics__pb2.GetTopicRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_topics__pb2.GetTopicResponse.SerializeToString,
            ),
            'GetTopics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopics,
                    request_deserializer=onehub_dot_v1_dot_topics__pb2.GetTopicsRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_topics__pb2.GetTopicsResponse.SerializeToString,
            ),
            'DeleteTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTopic,
                    request_deserializer=onehub_dot_v1_dot_topics__pb2.DeleteTopicRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_topics__pb2.DeleteTopicResponse.SerializeToString,
            ),
            'UpdateTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTopic,
                    request_deserializer=onehub_dot_v1_dot_topics__pb2.UpdateTopicRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_topics__pb2.UpdateTopicResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'onehub.v1.TopicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TopicService(object):
    """*
    Service for operating on topics
    """

    @staticmethod
    def CreateTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.TopicService/CreateTopic',
            onehub_dot_v1_dot_topics__pb2.CreateTopicRequest.SerializeToString,
            onehub_dot_v1_dot_topics__pb2.CreateTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTopics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.TopicService/ListTopics',
            onehub_dot_v1_dot_topics__pb2.ListTopicsRequest.SerializeToString,
            onehub_dot_v1_dot_topics__pb2.ListTopicsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.TopicService/GetTopic',
            onehub_dot_v1_dot_topics__pb2.GetTopicRequest.SerializeToString,
            onehub_dot_v1_dot_topics__pb2.GetTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.TopicService/GetTopics',
            onehub_dot_v1_dot_topics__pb2.GetTopicsRequest.SerializeToString,
            onehub_dot_v1_dot_topics__pb2.GetTopicsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.TopicService/DeleteTopic',
            onehub_dot_v1_dot_topics__pb2.DeleteTopicRequest.SerializeToString,
            onehub_dot_v1_dot_topics__pb2.DeleteTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.TopicService/UpdateTopic',
            onehub_dot_v1_dot_topics__pb2.UpdateTopicRequest.SerializeToString,
            onehub_dot_v1_dot_topics__pb2.UpdateTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
