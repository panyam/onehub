# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from onehub.v1 import messages_pb2 as onehub_dot_v1_dot_messages__pb2


class MessageServiceStub(object):
    """*
    Service for operating on messages
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMessages = channel.unary_unary(
                '/onehub.v1.MessageService/CreateMessages',
                request_serializer=onehub_dot_v1_dot_messages__pb2.CreateMessagesRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_messages__pb2.CreateMessagesResponse.FromString,
                )
        self.ImportMessages = channel.unary_unary(
                '/onehub.v1.MessageService/ImportMessages',
                request_serializer=onehub_dot_v1_dot_messages__pb2.ImportMessagesRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_messages__pb2.ImportMessagesResponse.FromString,
                )
        self.ListMessages = channel.unary_unary(
                '/onehub.v1.MessageService/ListMessages',
                request_serializer=onehub_dot_v1_dot_messages__pb2.ListMessagesRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_messages__pb2.ListMessagesResponse.FromString,
                )
        self.GetMessage = channel.unary_unary(
                '/onehub.v1.MessageService/GetMessage',
                request_serializer=onehub_dot_v1_dot_messages__pb2.GetMessageRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_messages__pb2.GetMessageResponse.FromString,
                )
        self.GetMessages = channel.unary_unary(
                '/onehub.v1.MessageService/GetMessages',
                request_serializer=onehub_dot_v1_dot_messages__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_messages__pb2.GetMessagesResponse.FromString,
                )
        self.DeleteMessage = channel.unary_unary(
                '/onehub.v1.MessageService/DeleteMessage',
                request_serializer=onehub_dot_v1_dot_messages__pb2.DeleteMessageRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_messages__pb2.DeleteMessageResponse.FromString,
                )
        self.UpdateMessage = channel.unary_unary(
                '/onehub.v1.MessageService/UpdateMessage',
                request_serializer=onehub_dot_v1_dot_messages__pb2.UpdateMessageRequest.SerializeToString,
                response_deserializer=onehub_dot_v1_dot_messages__pb2.UpdateMessageResponse.FromString,
                )


class MessageServiceServicer(object):
    """*
    Service for operating on messages
    """

    def CreateMessages(self, request, context):
        """*
        Create a single message or messages in batch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportMessages(self, request, context):
        """*
        Import messages in bulk
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMessages(self, request, context):
        """*
        List all messages in a topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessage(self, request, context):
        """*
        Get a particular message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """*
        Batch get multiple messages by IDs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessage(self, request, context):
        """*
        Delete a particular message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMessage(self, request, context):
        """*
        Update a message within a topic.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessages,
                    request_deserializer=onehub_dot_v1_dot_messages__pb2.CreateMessagesRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_messages__pb2.CreateMessagesResponse.SerializeToString,
            ),
            'ImportMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportMessages,
                    request_deserializer=onehub_dot_v1_dot_messages__pb2.ImportMessagesRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_messages__pb2.ImportMessagesResponse.SerializeToString,
            ),
            'ListMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMessages,
                    request_deserializer=onehub_dot_v1_dot_messages__pb2.ListMessagesRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_messages__pb2.ListMessagesResponse.SerializeToString,
            ),
            'GetMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessage,
                    request_deserializer=onehub_dot_v1_dot_messages__pb2.GetMessageRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_messages__pb2.GetMessageResponse.SerializeToString,
            ),
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=onehub_dot_v1_dot_messages__pb2.GetMessagesRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_messages__pb2.GetMessagesResponse.SerializeToString,
            ),
            'DeleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessage,
                    request_deserializer=onehub_dot_v1_dot_messages__pb2.DeleteMessageRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_messages__pb2.DeleteMessageResponse.SerializeToString,
            ),
            'UpdateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMessage,
                    request_deserializer=onehub_dot_v1_dot_messages__pb2.UpdateMessageRequest.FromString,
                    response_serializer=onehub_dot_v1_dot_messages__pb2.UpdateMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'onehub.v1.MessageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageService(object):
    """*
    Service for operating on messages
    """

    @staticmethod
    def CreateMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.MessageService/CreateMessages',
            onehub_dot_v1_dot_messages__pb2.CreateMessagesRequest.SerializeToString,
            onehub_dot_v1_dot_messages__pb2.CreateMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.MessageService/ImportMessages',
            onehub_dot_v1_dot_messages__pb2.ImportMessagesRequest.SerializeToString,
            onehub_dot_v1_dot_messages__pb2.ImportMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.MessageService/ListMessages',
            onehub_dot_v1_dot_messages__pb2.ListMessagesRequest.SerializeToString,
            onehub_dot_v1_dot_messages__pb2.ListMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.MessageService/GetMessage',
            onehub_dot_v1_dot_messages__pb2.GetMessageRequest.SerializeToString,
            onehub_dot_v1_dot_messages__pb2.GetMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.MessageService/GetMessages',
            onehub_dot_v1_dot_messages__pb2.GetMessagesRequest.SerializeToString,
            onehub_dot_v1_dot_messages__pb2.GetMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.MessageService/DeleteMessage',
            onehub_dot_v1_dot_messages__pb2.DeleteMessageRequest.SerializeToString,
            onehub_dot_v1_dot_messages__pb2.DeleteMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/onehub.v1.MessageService/UpdateMessage',
            onehub_dot_v1_dot_messages__pb2.UpdateMessageRequest.SerializeToString,
            onehub_dot_v1_dot_messages__pb2.UpdateMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
